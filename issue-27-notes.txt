Current status:
- Add documentation
- Finish up versioning changes

Final approach:
- see XXXs, "dap"
- file ticket for updating the rest of the test suite
- rerun test suite on all Node versions, both 32-bit and 64-bit
- update changelog and version file
- rerun / document the manual testing I did:
  - see below
  - core files kept around when they should be, not when they're not
  - memory leak test
  - streaming test:
    - ::jsarray on large array: immediately get results, rapid paging
    - ::jsprint on same array: no dice for a while
    - `truss` confirms the behavior
  - failures induced in test code
    - stderr before load completes
    - broken jsarray output
    - broken jsprint output
- file tickets for (or document in other tickets) the changes here:
  - changed internal representation of arrays to better support large arrays
  - update jsprint to use this (still sucks because of the way jsprint works)
  - update v8array to use this (not much difference?)
  - **no longer print lots of "hole" values on the end of long arrays**
  - add "::jsarray" command
  - generalize test suite common code for use in more places
  - test suite can now use packages (but must be careful -- probably no binaries)

Tests (as of commit 1691d5992833b37b83bd88d2a5b04b99d4e1867c):
- `make prepush` from clean workspace
  - builds everything, installs packages, runs tests
- `make prepush` from there
  - re-runs checks and test suite -- no rebuild or package install
- `make` after that
  - does basically nothing
- `make clean`
  - removes everything
- `make`
  - rebuilds program (does not install modules)
- `make` again
  - does basically nothing
- `make test`
  - builds, installs packages, runs test suite
- `make -n test`
  - only will run test suite
- touch package.json; `make -n test`
  - rebuilds packages, then will run test suite


CHANGES:

#27 want streaming way to iterate array elements
